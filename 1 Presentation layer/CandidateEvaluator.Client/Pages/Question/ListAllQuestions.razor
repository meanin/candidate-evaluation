@page "/question"
@using CandidateEvaluator.Common.Responses.Category
@using CandidateEvaluator.Common.Responses.Question
@using Microsoft.AspNetCore.Blazor.Services
@inject Services.UserIdentityService Http
@inject IUriHelper UriHelper

@if (_initialized == false)
{
    <div class="fa-3x">
        <i class="fas fa-spinner fa-pulse"></i>
    </div>
}
else
{
    <div>
        <a href="/question/create" class="btn">Create new question</a>
    </div>
    <div id="content">
        @foreach (var category in _categoryModels)
        {
            var id = _categoryModels.IndexOf(category);
            var questions = _questionModels.Where(q => q.CategoryId == category.Id);
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <button class="btn btn-link@(id!=0?" collapsed":"")" data-toggle="collapse" data-target="#category-@id">
                            @category.Name
                        </button>
                    </h4>
                </div>
            </div>

            <div id="category-@id" class=" collapse@(id == 0 ? " show" : "")" data-parent="#content">
                <div class="card-body">
                    @foreach (var question in questions)
                    {
                        <label><a href="/question/@question.Id">@question.Name</a></label>
                        <pre>@question.Text</pre>
                        <br/>
                    }
                </div>
            </div>
        }
    </div>
}

@code
{
    private List<QuestionResponse> _questionModels;
    private List<CategoryResponse> _categoryModels;
    private bool _initialized = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _questionModels = await Http.AuthorizedGetJsonAsync<List<QuestionResponse>>("api/question/");
            var categories = await Http.AuthorizedGetJsonAsync<List<CategoryResponse>>("api/category/");
            _categoryModels = categories.Where(c => _questionModels.Any(q => q.CategoryId == c.Id)).ToList();
            _initialized = true;
        }
        catch
        {
            UriHelper.NavigateTo("/");
        }
    }
}