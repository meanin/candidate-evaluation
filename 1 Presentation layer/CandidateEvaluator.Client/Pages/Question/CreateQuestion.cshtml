@page "/question/{ownerId:guid}/{categoryId:guid}/{id:guid}"
@using Microsoft.AspNetCore.Blazor.Services
@inject Services.UserIdentityService Http
@inject IUriHelper UriHelper

@if (_categoryModels == null)
{
    <p><em>Loading...</em></p>

}
else
{
    <a href="/question" class="btn">Go back</a>
    <div class="form-group">
        <label>Category</label>
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown">
                @if (_selectedCategory == null)
                {
                    <span>Select category</span>
                }
                else
                {
                    <span>@_selectedCategory.Name</span>

                }
            </button>
            <div class="dropdown-menu">
                @foreach (var category in _categoryModels)
                {
                    <button class="dropdown-item" onclick="@(c => _setSelectedCategory(category))">@category.Name</button>
                }
            </div>
        </div>
    </div>
    <div class="form-group">
        <label>Name</label>
        <input class="form-control" type="text" bind=@_questionModel.Name placeholder="Enter question name..." />
    </div>
    <div>
        <textarea class="form-control" rows="4" bind=@_questionModel.Text placeholder="Enter question" />
    </div>
    <button class="btn btn-blue" onclick="@Save">Save</button>
}

@functions
{
[Parameter]
Guid OwnerId { get; set; }
[Parameter]
Guid CategoryId { get; set; }
[Parameter]
Guid Id { get; set; }

private List<Contract.Models.Category> _categoryModels;

private Contract.Models.Category _selectedCategory;

private Contract.Models.Question _questionModel = new Contract.Models.Question();

protected override async Task OnInitAsync()
{
    try
    {
        _categoryModels = await Http.AuthorizedGetJsonAsync<List<Contract.Models.Category>>("api/category");
        _questionModel = Id == Guid.Empty ? new Contract.Models.Question() : await Http.AuthorizedGetJsonAsync<Contract.Models.Question>($"api/Question/{OwnerId}/{CategoryId}/{Id}");
        _selectedCategory = _categoryModels.FirstOrDefault(c => c.Id == _questionModel.CategoryId);
    }
    catch (Exception e)
    {
        UriHelper.NavigateTo("/");
    }
}

private async Task Save()
{
    var created = await Http.AuthorizedPostJsonAsync<Contract.Models.Question>("api/Question", _questionModel);
    UriHelper.NavigateTo($"/question");
}

private void _setSelectedCategory(Contract.Models.Category category)
{
    _selectedCategory = category;
    _questionModel.CategoryId = category.Id;

}
}