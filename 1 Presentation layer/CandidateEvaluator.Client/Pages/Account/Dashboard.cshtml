@page "/dashboard"
@using CandidateEvaluator.Common.Dtos
@using Microsoft.AspNetCore.Blazor.Services
@inject Services.UserIdentityService Http
@inject IUriHelper UriHelper

<h1>Account Dashboard</h1>

@if (_activities == null)
{
    <div class="fa-3x">
        <i class="fas fa-spinner fa-pulse"></i>
    </div>
}
else
{
    <div>
        <table class="table">
            <thead>
            <tr>
                <th></th>
                <th>Id</th>
                <th>Type</th>
                <th>Name</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var model in _activities)
            {
                <tr>
                    <td>@(_activities.IndexOf(model)+1)</td>
                    <td>@model.EntityId</td>
                    <td>@model.Type.ToString()</td>
                    @switch (model.Type)
                    {
                        case "Category":
                            <td><a href="/category/@model.EntityId">@model.Name</a></td>
                            break;
                        case "Interview":
                            <td><a href="/interview/@model.EntityId">@model.Name</a></td>
                            break;
                        case "Question":
                            <td><a href="/question/@model.EntityId">@model.Name</a></td>
                            break;
                        default:
                            break;
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>

    <div>
        <table class="table">
            <thead>
            <tr>
                <th>Id</th>
                <th>Candidate name</th>
                <th>Interview date</th>
            </tr>
            </thead>
            <tbody>
                @foreach (var result in _interviewResults)
                {
                    <tr>
                        <td>@result.Id</td>
                        <td><a href="/interview/result/@result.Id">@result.CandidateName</a></td>
                        <td>@result.InterviewDate</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}


@functions
{
    private List<RecentActivityDto> _activities;
    private List<InterviewResultDto> _interviewResults;

    protected override async Task OnInitAsync()
    {
        try
        {
            _activities = await Http.AuthorizedGetJsonAsync<List<RecentActivityDto>>("api/dashboard");
            _interviewResults = await Http.AuthorizedGetJsonAsync<List<InterviewResultDto>>("api/interviewresult");
        }
        catch
        {
            UriHelper.NavigateTo("/");
        }
    }

}
